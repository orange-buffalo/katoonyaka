buildscript {
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.4.1.RELEASE"
        classpath "com.github.ben-manes:gradle-versions-plugin:0.11.3"
    }
}

plugins {
    id "java"
    id "com.github.jlouns.cpe" version "0.4.0"
    id "com.moowork.grunt" version "0.11"
}

apply plugin: "spring-boot"
apply plugin: "com.github.ben-manes.versions"

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    providedCompile
}

sourceSets.main.compileClasspath += configurations.providedCompile
sourceSets.test.compileClasspath += configurations.providedCompile
sourceSets.test.runtimeClasspath += configurations.providedCompile

springBoot {
    executable = true
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "commons-logging"
    }
    compile("org.springframework:spring-webmvc:4.3.3.RELEASE") {
        exclude module: "commons-logging"
    }
    compile("org.springframework:spring-context-support:4.3.3.RELEASE") {
        exclude module: "commons-logging"
    }
    compile("org.springframework:spring-test") {
        exclude module: "commons-logging"
    }
    compile "org.hibernate:hibernate-validator:5.1.3.Final"
    compile "com.google.guava:guava:19.0"
    compile "com.google.code.gson:gson:2.3.1"
    compile "org.freemarker:freemarker:2.3.22"
    compile "org.apache.commons:commons-lang3:3.4"
    compile "commons-io:commons-io:2.4"
    compile "javax.servlet:jstl:1.2"
    compile "ch.qos.logback:logback-classic:1.1.7"
    compile "com.fasterxml.jackson.core:jackson-databind:2.5.3"
    compile "org.eclipse.persistence:org.eclipse.persistence.moxy:2.6.2"
    compile("com.google.apis:google-api-services-oauth2:v1-rev85-1.19.0") {
        exclude module: "commons-logging"
    }
    compile "com.jayway.jsonpath:json-path:2.0.0"
    compile "com.twelvemonkeys.imageio:imageio-jpeg:3.2.1"

    runtime "org.slf4j:jcl-over-slf4j:1.7.12"

    providedCompile "javax.servlet:javax.servlet-api:3.1.0"
    providedCompile "org.projectlombok:lombok:1.16.6"

    testCompile "org.springframework.boot:spring-boot-starter-test"
}

grunt {
    workDir = file("${rootDir}/src/main/web")
    colors = true
    bufferOutput = false
}

node {
    nodeModulesDir = file("${rootDir}/src/main/web")
    download = true
    version = "5.3.0"
    npmVersion = "3.5.3"
}

sourceCompatibility = 1.8

def versionSrc = new File("${rootDir}/src/main/resources/templates/global-settings.ftl").text
def matcher = versionSrc =~ /katoonyakaVersion="(.*)"/
def katoonyakaVersion = matcher[0][1]
println "Building Katoonyaka v${katoonyakaVersion}"

task configureGrunt {
    dependsOn "installGrunt", "npmInstall";
}

task buildJs(type:GruntTask) {
    args = ["buildJs", "--katoonyakaVersion=${katoonyakaVersion}"]
    doLast {
        copy {
            from "${rootDir}/src/main/web/dist/js"
            into "${buildDir}/resources/main/public/static/js"
        }
    }
}

task buildCss {
    dependsOn "grunt_buildCss"
    doLast {
        copy {
            from "${rootDir}/src/main/web/dist/css/katoonyaka.css"
            into "${buildDir}/resources/main/public/static/css/"
            rename { String fileName ->
                "katoonyaka.${katoonyakaVersion}.css"
            }
        }
    }
}

task buildFont {
    dependsOn "grunt_buildFont"
    doLast {
        copy {
            from "${rootDir}/src/main/web/dist/fonts/_icons.scss"
            into "${rootDir}/src/main/web/src/sass/katoonyaka/"
        }
    }
}

jar {
    dependsOn "buildCss", "buildJs"
}

clean.doFirst {
    delete "${rootDir}/src/main/web/dist/"
}